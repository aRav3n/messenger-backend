// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  name             String
  hash             String
  friendshipsA     Friendship[] @relation("FriendshipA")
  friendshipsB     Friendship[] @relation("FriendshipB")
  sentMessages     Message[]    @relation("SentMessages")
  receivedMessages Message[]    @relation("ReceivedMessages")
}

model Friendship {
  id      Int       @id @default(autoincrement())
  userA   User      @relation("FriendshipA", fields: [userAId], references: [id], onDelete: Cascade)
  userAId Int
  userB   User      @relation("FriendshipB", fields: [userBId], references: [id], onDelete: Cascade)
  userBId Int
  Message Message[]

  @@unique([userAId, userBId])
}

model Message {
  id           Int        @id @default(autoincrement())
  sender       User       @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  senderId     Int
  receiver     User       @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId   Int
  friendship   Friendship @relation(fields: [friendshipId], references: [id], onDelete: Cascade)
  friendshipId Int
}
